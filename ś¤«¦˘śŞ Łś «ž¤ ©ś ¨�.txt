hdfs namenode -format
start-all.sh
/usr/lib/jvm/java-8-openjdk-amd64/bin/jps





val rdd1 = sc.textFile("hdfs://localhost:9000/datafiles/basketball_leagues.txt")
val rdd2 = sc.textFile("hdfs://localhost:9000/datafiles/dimPlayers.txt")
val rdd3 = sc.textFile("hdfs://localhost:9000/datafiles/dimteams.txt")
val rdd4 = sc.textFile("hdfs://localhost:9000/datafiles/factFinal.txt")

val  FactFinal = rdd4.map(line => (((line.split(",")(0))),(line.split(",")(1)),(line.split(",")(2)),(line.split(",")(3)),(line.split(",")(4)),(line.split(",")(8).toInt)))


val firstline = rdd1.first()
val rdd12 =rdd1.filter(in => !in.equals(firstline))
val DimLeagues= rdd12.map(line => ((line.split(",")(0)),(line.split(",")(1))))

val DimPlayerstats = rdd2.map(line =>((line.split(",")(0)),(line.split(",")(2)),(line.split(",")(4)),(line.split(",")(9)),(line.split(",")(12)),(line.split(",")(16))))

val DimTeams = rdd3.map(line => ((line.split(",")(58)),(line.split(",")(0)),(line.split(",")(7)),(line.split(",")(51)),(line.split(",")(55))))

val uniyear = rdd4.map(line => (line.split(",")(1)))
val DimYears = uniyear.distinct





EROTIMA PROTO POSA KALATHIA MPIKAN STO NBA
val remap1ff = FactFinal.map(a => ((a._4),(a._1,a._2,a._3,a._5,a._6)))

val reduce1 = remap1ff.reduceByKey((a, b) =>(a._1,a._2,a._3,a._4,a._5+b._5)).map(a=>(a._1,(a._2._1,a._2._2,a._2._3,a._2._4,a._2._5)))



val protoerot = DimLeagues.join(reduce1).map(a=> (a._1,a._2._1,a._2._2._5))


val protoerot1 = protoerot.filter(x => x._1 == "NBA") 
protoerot1.saveAsTextFile("NBA_YEARS")

EROTIMA POSA KALATHIA MPIKAN APO Atlanta Hawks TO 1991-92-93
metatrepoume tin defteri stili se klidi
val remap2ff = FactFinal.map(a => ((a._2),(a._1,a._3,a._4,a._5,a._6)))
val reduce2 = remap2ff.reduceByKey((a, b) =>(a._1,a._2,a._3,a._4,a._5+b._5)).map(a=>(a._2._4,(a._1,a._2._1,a._2._2,a._2._3,a._2._5)))



//metatrepoume tin proti stili team se klidi
val remaptm = DimTeams.map(a=> ((a._1),(a._2,a._3,a._4,a._5)))


val defterojoin1 = remaptm.join(reduce2).map(a=>(a._2._2._1,a._1,a._2._1._2,a._2._2._5))
//proto filtro
val protofilt= defterojoin1.filter(x => (x._1 == "1991" || x._1 == "1992" || x._1 == "1993"))
//deftero filtro
val defterofilt = protofilt.filter(x => x._3 == "Atlanta Hawks")
val tritoremap = defterofilt.map(x => (x._1,x._2,x._4))

tritoremap.saveAsTextFile("AtlantaHawks_years91_92_93") 






























